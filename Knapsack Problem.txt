Knapsack Problem

O(nc) T || O(nc) space n is the no of items & c is the capacity

import java.util.*;

class Program {
  public static List<List<Integer>> knapsackProblem(int[][] items, int capacity) {
    // Write your code here.
    // Replace the code below.
     int n = items.length; 
    int value= knapsack(items,capacity,n);
    List<Integer> totalValue = Arrays.asList(value);
    List<Integer> finalItems = Arrays.asList(1, 2);
    var result = new ArrayList<List<Integer>>();
    result.add(totalValue);
    result.add(finalItems);
    return result;

    
  }
  public static int knapsack(int[][] items,int capacity,int n){
    if (n==0||capacity==0)
      return 0;
    if (items[n-1][1]> capacity) return knapsack(items,capacity,n-1);
    else if (items[n-1][1]<= capacity) return Math.max(items[n-1][0]+knapsack(items,capacity - items[n-1][1],n-1),knapsack(items,capacity,n-1));
  return 0;
  }
  
}
